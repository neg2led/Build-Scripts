# Written and placed in public domain by Jeffrey Walton.
# This patch fixes some issues with OpenLDAP.
--- servers/slapd/back-mdb/back-mdb.h
+++ servers/slapd/back-mdb/back-mdb.h
@@ -173,11 +173,7 @@
 #define CACHELINE	64
 #endif
 
-#if defined(__i386) || defined(__x86_64)
-#define MISALIGNED_OK	1
-#else
 #define	ALIGNER	(sizeof(size_t)-1)
-#endif
 
 typedef struct IndexRbody {
 	AttrInfo *ai;
--- libraries/libldap/cyrus.c
+++ libraries/libldap/cyrus.c
@@ -41,6 +41,10 @@
 #define HOST_NAME_MAX _POSIX_HOST_NAME_MAX
 #endif
 
+#if !defined(HOST_NAME_MAX) && defined(__linux__)
+#define HOST_NAME_MAX 64
+#endif
+
 #ifdef HAVE_SASL_SASL_H
 #include <sasl/sasl.h>
 #else
--- libraries/liblmdb/mdb.c
+++ libraries/liblmdb/mdb.c
@@ -184,10 +184,6 @@
 #define BIG_ENDIAN	__BIG_ENDIAN
 #endif
 
-#if defined(__i386) || defined(__x86_64) || defined(_M_IX86)
-#define MISALIGNED_OK	1
-#endif
-
 #include "lmdb.h"
 #include "midl.h"
 
@@ -767,7 +763,7 @@
 #endif
 		char pad[(MNAME_LEN+CACHELINE-1) & ~(CACHELINE-1)];
 	} mt2;
-	MDB_reader	mti_readers[1];
+	MDB_reader	mti_readers[];
 } MDB_txninfo;
 
 	/** Lockfile format signature: version, features and field layout */
@@ -830,7 +826,7 @@
 		} pb;
 		uint32_t	pb_pages;	/**< number of overflow pages */
 	} mp_pb;
-	indx_t		mp_ptrs[1];		/**< dynamic size */
+	indx_t		mp_ptrs[];		/**< dynamic size */
 } MDB_page;
 
 	/** Size of the page header, excluding dynamic data at the end */
@@ -913,7 +909,7 @@
 /** @} */
 	unsigned short	mn_flags;		/**< @ref mdb_node */
 	unsigned short	mn_ksize;		/**< key size */
-	char		mn_data[1];			/**< key and data are appended here */
+	char		mn_data[];			/**< key and data are appended here */
 } MDB_node;
 
 	/** Size of the node header, excluding dynamic data at the end */
@@ -964,9 +960,13 @@
 #else
 #if SIZE_MAX > 4294967295UL
 #define COPY_PGNO(dst,src)	do { \
-	unsigned short *s, *d;	\
-	s = (unsigned short *)&(src);	\
-	d = (unsigned short *)&(dst);	\
+	unsigned char *s, *d;	\
+	s = (unsigned char *)&(src);	\
+	d = (unsigned char *)&(dst);	\
+	*d++ = *s++;	\
+	*d++ = *s++;	\
+	*d++ = *s++;	\
+	*d++ = *s++;	\
 	*d++ = *s++;	\
 	*d++ = *s++;	\
 	*d++ = *s++;	\
@@ -974,9 +974,11 @@
 } while (0)
 #else
 #define COPY_PGNO(dst,src)	do { \
-	unsigned short *s, *d;	\
-	s = (unsigned short *)&(src);	\
-	d = (unsigned short *)&(dst);	\
+	unsigned char *s, *d;	\
+	s = (unsigned char *)&(src);	\
+	d = (unsigned char *)&(dst);	\
+	*d++ = *s++;	\
+	*d++ = *s++;	\
 	*d++ = *s++;	\
 	*d = *s;	\
 } while (0)
